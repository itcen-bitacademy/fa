<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="menu48">
	<!-- Team -->
	<insert parameterType="test4vo" id="save">
	<![CDATA[
		insert
		  into test
		values (null, #{name })
		]]>
	<selectKey order="AFTER" resultType="long" keyProperty="no">
	<![CDATA[
			select last_insert_id()
			]]>
	</selectKey>
	</insert>
	<!-- insert -->
	<insert parameterType="ldebtvo" id="insert">
	<![CDATA[
		insert
		  into tb_l_term_debt
		values (null, #{code},#{name},#{majorCode},#{debtAmount}, #{debtAmount}, #{repayWay}, 'N',#{debtDate}, #{expDate}, #{intRate}, #{intPayWay}, #{mgr}, #{mgrCall}, #{bankCode},#{depositNo},#{voucherNo},'N',#{insertId},now(),null,null)
		]]>
	<selectKey order="AFTER" resultType="long" keyProperty="no">
	<![CDATA[
			select last_insert_id()
			]]>
	</selectKey>
	</insert>
	
	<!--상환 insert -->
	<insert parameterType="repayvo" id="insertrepay">
	<![CDATA[
		insert
		  into tb_repay
		values (null, #{debtNo},#{code},#{payPrinc},#{intAmount},#{payDate}, 'L', #{voucherNo},'N',#{insertId},now(),null,null)
		]]>
	<selectKey order="AFTER" resultType="long" keyProperty="no">
	<![CDATA[
			select last_insert_id()
			]]>
	</selectKey>
	</insert>
	
	<!-- 전표번호 읽어오기 -->
	<!-- delete -->
	<select parameterType="list" id="selectVoucherNo" resultType="long">
	<![CDATA[
		select voucher_no 
		from tb_l_term_debt
		where no in 
	]]>
	<foreach separator="," open="(" close=")" collection="list" index="index" item="item">
		#{item } 
	</foreach>
	</select>
	
	
	<!-- 전체 갯수 가지고 오기 -->
	<select parameterType="map" id="selectAllCount" resultType="int">
	<![CDATA[
		select count(*)
		    from tb_l_term_debt as a,tb_bank as b,tb_bank_account as c
		    where a.bank_code=b.code
		    and a.deposit_no = c.deposit_no
		    and	a.delete_flag= 'N'
		    and a.repay_comple_flag = 'N'
		    and 	date_format(a.debt_date,'%Y') like concat('%',#{year},'%') 
			and 	a.code like concat('%',#{code},'%') 	
	]]>
	
	</select>
	<!-- select list -->
	<select parameterType="map" id="selectAll" resultType="ldebtvo">
	<![CDATA[
		select a.no as no,
			a.code as code,
   			a.name as name,
    		a.major_code as majorCode,
    		a.debt_amount as debtAmount,
    		a.repay_bal as repayBal,
    		a.repay_way as repayWay,
    		concat(date_format(a.debt_date,'%Y-%m-%d'),'~',
    		date_format(a.exp_date,'%Y-%m-%d')) as debtExpDate,
    		date_format(a.exp_date,'%Y-%m-%d') as expDate,
    		date_format(a.debt_date,'%Y-%m-%d') as debtDate,
    		a.int_rate as intRate,
    		a.int_pay_way as intPayWay,
   			a.mgr,
    		a.mgr_call as mgrCall,
		    a.bank_code as bankCode,
		    a.deposit_no as depositNo,
		    c.deposit_host as depositHost,
		    b.name as bankName,
			date_format(a.insert_date,'%Y-%m-%d %H:%i:%S') as insertDate
		    from tb_l_term_debt as a,tb_bank as b,tb_bank_account as c
		    where a.bank_code=b.code
		   		and a.deposit_no = c.deposit_no
		    	and a.delete_flag= 'N'
		    	and a.repay_comple_flag = 'N'
		    	and 	date_format(a.debt_date,'%Y') like concat('%',#{year},'%') 
				and 	a.code like concat('%',#{code},'%') 
	]]>
	<if test="pagination.pageIndex >= 0">
	<![CDATA[
         limit    #{pagination.pageIndex }, #{pagination.listSize }
    ]]>
	</if>
	</select>
	<!-- 상환내역 리스트 가지고 오기 -->
	<select id="selectrepaylist" parameterType="long" resultType="repayvo">
	<![CDATA[
	select 	code as code,
			pay_princ as payPrinc,
			int_amount as intAmount,
			date_format(pay_date,'%Y-%m-%d') as payDate
	from tb_repay
	where debt_type = 'L'
		and debt_no = #{_parameter}
		and delete_flag = 'N'
	]]>
	</select>
	
	<!-- 마감일 읽기위한 select -->
	<select id="selectLtermdebtlist" resultType="ldebtvo" parameterType="list">
	<![CDATA[
		select date_format(debt_date,'%Y-%m-%d') as debtDate 
		from tb_l_term_debt
		where no in 
	]]>
	<foreach separator="," open="(" close=")" collection="list" index="index" item="item">
		#{item } 
	</foreach>
	</select>
	
	<select id="selectsection" resultType="sectionvo">
	<![CDATA[
		select no,
			classification,
			code,
			last_update as lastUpdate,
			parent_no as parentNo
		    from tb_section
		    where parent_no= 6
	]]>
	</select>
	<!-- 상환후 갱신된 정보 select -->
	<select parameterType="long" id="selectone" resultType="ldebtvo">
	<![CDATA[
		select no,
			code,
   			name,
    		major_code as majorCode,
    		debt_amount as debtAmount,
    		repay_bal as repayBal,
    		repay_way as repayWay,
    		concat(date_format(debt_date,'%Y-%m-%d'),'~',
    		date_format(exp_date,'%Y-%m-%d')) as debtExpDate,
    		date_format(exp_date,'%Y-%m-%d') as expDate,
    		date_format(debt_date,'%Y-%m-%d') as debtDate,
    		int_rate as intRate,
    		int_pay_way as intPayWay,
   			mgr,
    		mgr_call as mgrCall,
		    bank_code as bankCode,
		    deposit_no as depositNo,
		    voucher_no as voucherNo
		    from tb_l_term_debt
		    where no=#{_parameter}
	]]>
	</select>
	<!-- code 중복확인 -->
	<select parameterType="string" id="getbycode" resultType="ldebtvo">
	<![CDATA[
		select
			code,
			delete_flag as deleteFlag
		from
			tb_l_term_debt 
   		where code like #{_parameter}
	]]>
	</select>
	<!-- 해당 코드별 부채확인 -->
	<select id="selectrepayAlllist" parameterType="list" resultType="repayvo">
	<![CDATA[
		select 	code as code,
			pay_princ as payPrinc,
			int_amount as intAmount,
			date_format(pay_date,'%Y-%m-%d') as payDate
		from tb_repay
		where debt_type = 'L'
			and debt_no in 
	]]>
		<foreach separator="," open="(" close=")" collection="list" index="index" item="item">
			#{item } 
		</foreach>
	<![CDATA[
		and delete_flag = 'N'
		order by code
	]]>
	</select>
	<select id="getRepayDueList" parameterType="map" resultType="ldebtvo">
	<![CDATA[
	select code,
		   repay_bal as repayBal,
		   (case repay_way
   				when 'Y' then (case 
   				]]>
				<choose>
					<when test="(startDate.substring(1,4) != endDate.substring(1,4))">
				<![CDATA[
					when (date_format(debt_date,"%m-%d") BETWEEN 
						date_format(#{startDate},"%m-%d") AND '12-31')
						
						then
						 concat(date_format(#{startDate},"%y-"), date_format(debt_date,"%m-%d"))
						 
					when  (date_format(debt_date,"%m-%d") BETWEEN 
						'01-01' AND date_format(#{endDate},"%m-%d"))
							
						then 
						 concat(date_format(#{endDate},"%y-"), date_format(debt_date,"%m-%d"))
					]]>
					</when>
					<otherwise>
					<![CDATA[
					when date_format(debt_date,"%m-%d") BETWEEN 
						date_format(#{startDate},"%m-%d") AND date_format(#{endDate},"%m-%d")
						
						then
						 concat(date_format(#{startDate},"%y-"), date_format(debt_date,"%m-%d"))
					]]>
					</otherwise>
				</choose>     
				<![CDATA[
            		   
         			 end)
    			when 'M' then (case 
    				]]>
				<choose>
					<when test="(startDate.substring(5,6) != endDate.substring(5,6))">
				<![CDATA[
					when (date_format(debt_date,"%d") BETWEEN 
						date_format(#{startDate},"%d") AND '31')
						
						then
						 concat(date_format(#{startDate},"%y-%m-"), date_format(debt_date,"%d"))
						 
					when  (date_format(debt_date,"%d") BETWEEN 
						'01' AND date_format(#{endDate},"%d"))
							
						then 
						 concat(date_format(#{endDate},"%y-%m-"), date_format(debt_date,"%d"))
						 
						 
						 
					]]>
					</when>
					<otherwise>
					<![CDATA[
					when date_format(debt_date,"%d") BETWEEN 
						date_format(#{startDate},"%d") AND date_format(#{endDate},"%d")
						
						then
						 concat(date_format(#{startDate},"%y-%m"), date_format(debt_date,"%d"))
					]]>
					</otherwise>
				</choose>     
				<![CDATA[
            	
    			end) 
    			when 'E' then (
					 date_format(debt_date,"%y-%m-%d")
				)
    		end)
		   
		    as payDate
		   
	from tb_l_term_debt
	where (case repay_way
		when 'Y' then ( 
		]]>
		<choose>
			<when test="(startDate.substring(1,4) != endDate.substring(1,4))">
			<![CDATA[
			(date_format(debt_date,"%m-%d") BETWEEN 
				date_format(#{startDate},"%m-%d") AND '12-31')
			or (date_format(debt_date,"%m-%d") BETWEEN 
				'01-01' AND date_format(#{endDate},"%m-%d"))
			]]>
			</when>
			<otherwise>
			<![CDATA[
			date_format(debt_date,"%m-%d") BETWEEN 
				date_format(#{startDate},"%m-%d") AND date_format(#{endDate},"%m-%d")
			]]>
			</otherwise>
		</choose>     
		<![CDATA[
		)
		when 'M' then (
		]]>
		<choose>
			<when test="(startDate.substring(5,6) != endDate.substring(5,6))">
			<![CDATA[
			(date_format(debt_date,"%d") BETWEEN 
				date_format(#{startDate},"%d") AND '31')
			or (date_format(debt_date,"%d") BETWEEN 
				'01' AND date_format(#{endDate},"%d"))
			]]>
			</when>
			<otherwise>
			<![CDATA[
			date_format(debt_date,"%d") BETWEEN 
				date_format(#{startDate},"%d") AND date_format(#{endDate},"%d")
			]]>
			</otherwise>
		</choose>     
		<![CDATA[
		)
		when 'E' then (
			 date_format(debt_date,"%y-%m-%d") BETWEEN 
				date_format(#{startDate},"%y-%m-%d") AND date_format(#{endDate},"%y-%m-%d")
		)
	end)
	and repay_comple_flag = 'N'
	and delete_flag = 'N'
	]]>
	</select>
	
	<!-- update -->
	<update parameterType="ldebtvo" id="update">
	<![CDATA[
		update tb_l_term_debt 
		set name = #{name},
			major_code = #{majorCode},
			debt_amount = #{debtAmount},
			repay_bal = #{debtAmount},
			repay_way=#{repayWay},
			debt_date=#{debtDate},
			exp_date=#{expDate},
			int_rate=#{intRate},
			int_pay_way=#{intPayWay},
			mgr=#{mgr},
			mgr_call=#{mgrCall},
			bank_code=#{bankCode},
			deposit_no=#{depositNo},
			update_id=#{updateId},
			update_date=now(),
			voucher_no = #{voucherNo}

		where no=#{no}
	]]>
	</update>
	<!-- select no -->	
	<select parameterType="long" id="selectno" resultType="long">
	<![CDATA[
		select voucher_no
		from tb_l_term_debt
		where no=#{_parameter}
	]]>
	</select>
	<!-- delete -->
	<update parameterType="list" id="delete">
	<![CDATA[
		update tb_l_term_debt 
		set delete_flag='Y'
		where no in 
	]]>
	<foreach separator="," open="(" close=")" collection="list" index="index" item="item">
		#{item } 
	</foreach>
	</update>
	
	
	<!-- 상환 update -->
	<update parameterType="repayvo" id="repayupdate">
	<![CDATA[
		update tb_l_term_debt 
		set repay_bal = repay_bal - #{payPrinc}
		where no=#{debtNo}
	]]>
	</update>
	<!-- 상환완료 flag update -->
	<update parameterType="long" id="updaterepayflag">
	<![CDATA[
		update tb_l_term_debt 
		set repay_comple_flag = 'Y'
		where no=#{_parameter}
	]]>
	</update>
	
	<select id="businessDateStr" resultType="String">
	<![CDATA[
	select now();
	]]>
	</select>
	<update id="updateBankAccount" parameterType="bankaccountvo">
		update tb_l_term_debt
		set deposit_no = #{depositNo}
		where deposit_no = #{depositOld}
	</update>
	
</mapper>