<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="menu32">
	<!-- Test -->
	<insert id="save" parameterType="test1vo">
		<![CDATA[
		insert
		  into test
		values (null, #{name })
		]]>
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
			select last_insert_id()
			]]>
		</selectKey>
	</insert>
	
	<select id="getCustomerNoInfo" parameterType="String" resultType="1customervo">
		<![CDATA[
			select 
				(case
					when left(no,1) = "A"
					then replace(left(no, 1), "A", "자산거래처")
					when left(no,1) != "A"
					then concat("은행")
				 end) as customerDiv,
				  (CASE CHAR_LENGTH(no)
						when "07" then no
        				when "11" then concat(substr(substr(no, 2), 1, 3), "-", substr(substr(no,2), 4, 2), "-" , substr(substr(no, 2), 6, 5))
					end) as no,
				   name as name
		 	  from tb_customer
		 	 where no like '%${_parameter }%'
		 	   and delete_flag = "N"
		 	 union
			select replace(left(no, 1), "P", "매입거래처") as customerDiv,
				   concat(substr(substr(no, 2), 1, 3), "-", substr(substr(no,2), 4, 2), "-" , substr(substr(no, 2), 6, 5)) as no,
				   name as name
		 	  from tb_purchasecustomer
		 	 where no like '%${_parameter }%'
		 	   and delete_flag = "N"
		 	 union
			select replace(left(no, 1), "S", "매출거래처") as customerDiv,
				   concat(substr(substr(no, 2), 1, 3), "-", substr(substr(no,2), 4, 2), "-" , substr(substr(no, 2), 6, 5)) as no,
				   name as name
		 	  from tb_salescustomer
		 	 where no like '%${_parameter }%'
		 	   and delete_flag = "N" 
		]]>
	</select>
	
	
	
	<select id="getCustomerNameInfo" parameterType="String" resultType="1customervo">
		<![CDATA[
			select 
				(case
					when left(no,1) = "A"
					then replace(left(no, 1), "A", "자산거래처")
					when left(no,1) != "A"
					then concat("은행")
				 end) as customerDiv,
					(CASE CHAR_LENGTH(no)
						when "07" then no
        				when "11" then concat(substr(substr(no, 2), 1, 3), "-", substr(substr(no,2), 4, 2), "-" , substr(substr(no, 2), 6, 5))
					end) as no,
				   name as name
		 	  from tb_customer
		 	 where name like '${_parameter }'
		 	   and delete_flag = "N"
		 	 union
			select replace(left(no, 1), "P", "매입거래처") as customerDiv,
				   concat(substr(substr(no, 2), 1, 3), "-", substr(substr(no,2), 4, 2), "-" , substr(substr(no, 2), 6, 5)) as no,
				   name as name
		 	  from tb_purchasecustomer
		 	 where name like '${_parameter }'
		 	   and delete_flag = "N"
		 	 union
			select replace(left(no, 1), "S", "매출거래처") as customerDiv,
				   concat(substr(substr(no, 2), 1, 3), "-", substr(substr(no,2), 4, 2), "-" , substr(substr(no, 2), 6, 5)) as no,
				   name as name
		 	  from tb_salescustomer
		 	 where name like '${_parameter }'
		 	   and delete_flag = "N"
		  order by name desc
		  	 
		]]>
	</select>
	
	
	
	<select id="getBankCodeInfo" parameterType="String" resultType="bankvo">
		<![CDATA[
			select code as code,
				   name as name,
				   store as store
				   from tb_bank
			 where code like '${_parameter }'
		]]>
	</select>
	
	<select id="getBankNameInfo" parameterType="String" resultType="bankvo">
		<![CDATA[
			select code as code,
				   name as name,
				   store as store
				   from tb_bank
			 where concat(name, "은행", store) like '%${_parameter }%'
		]]>
	</select>
	
	<select id="getAccountCodeInfo" parameterType="String" resultType="accountManagement17Vo">
		<![CDATA[
			select no as accountNo,
				   name as accountName
				   from tb_account
			 where no like '${_parameter }'
		]]>
	</select>
	
	<select id="getAccountNameInfo" parameterType="String" resultType="accountManagement17Vo">
		<![CDATA[
			select no as accountNo,
				   name as accountName
				   from tb_account
			 where name like '%${_parameter }%'
		]]>
	</select>
	
	<select id="optionSearch" parameterType="map" resultType="1accountcustomerledgervo">
		<![CDATA[
			select a.no as accountNo,
				a.name as accountName,
				cu.no as customerNo,
		   	 	cu.name as customerName,
		   	 	cu.store as store,
		   	 	m.insert_day as regDate,
			   v.no as voucherNo,
			   i.order_no as voucherOrderNo,
			   m.insert_team as insertTeam,
			   m.insert_userid as insertUserid,
		   	   m.voucher_use as voucherUse,
		   	   c.card_no as cardNo,
			   c.user as cardUser,
			   ifnull(ba.bank_name, c.bank_name) as bankName,
			   ifnull(ba.bank_code, c.bank_code) as bankCode,
			   ba.deposit_no as depositNo,
			   ba.deposit_host as depositHost,
			   case 
			   when amount_flag="c"
			   then "대변"
			   when amount_flag="d"
			   then "차변"
			   end as amountFlag,
			   i.amount as amount
          from tb_voucher_manager v
          join tb_voucher_item i
            on v.no = i.voucher_no
          join tb_voucher_system_mapping m
            on i.voucher_no = m.voucher_no
          join tb_account a
            on a.no = i.account_no
	 left join (select no, name, concat("") as store
				  from tb_customer
				 union
				select no, name, concat("") as store
                  from tb_salescustomer
				 union
				select no, name, concat("") as store
                  from tb_purchasecustomer
                 union
                select code as no, name, store as store
                  from tb_bank) as cu
            on cu.no = m.customer_no
	 left join tb_cardmanager c
            on c.card_no = m.card_no
	 left join tb_bank_account ba
            on ba.deposit_no = m.deposit_no
         where v.use_yn = 1
           and i.use_yn = 1
           and m.use_yn = 1
           ]]>
           
			<if test="vo.datepicker1!=null and !vo.datepicker1.equals('')">		    
				<![CDATA[
					and m.insert_day >= #{vo.datepicker1 }
				]]>
			</if>
			<if test="vo.datepicker2!=null and !vo.datepicker2.equals('')">		    
				<![CDATA[
					and m.insert_day <= #{vo.datepicker2 }
				]]>
			</if>
			<if test="vo.accountNo!=null and !vo.accountNo.equals('')">
				<![CDATA[
					and a.no = #{vo.accountNo }
				]]>
			</if>
			<if test="vo.customerNo!=null and !vo.customerNo.equals('')">
				<![CDATA[
					and cu.no like '%${vo.customerNo }%'
				]]>
			</if>
			
			
			<![CDATA[
		      order by v.no asc, i.order_no ;
			]]>
	</select>
	
	

</mapper>