<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="menu13">
	<insert id="insert" parameterType="List">
		<![CDATA[
			insert into
			tb_sales
				(sales_no, 
				 number, 
				 sales_date, 
				 emp_manager, 
				 customer_code, 
				 customer_name, 
				 item_code, 
				 item_name, 
				 quantity, 
				 supply_value, 
				 total_price, 
				 sell_price,
				 tax_value, 
				 taxbill_no, 
				 release_date, 
				 insert_userid, 
				 insert_day, 
				 section_code, 
				 section_name)
			values
		]]>
		<foreach collection="list" item="item" separator=",">
			<![CDATA[
				(#{item.salesNo}, 
				 #{item.number}, 
				 #{item.salesDate}, 
				 #{item.empManager},
				 #{item.customerCode}, 
				 #{item.customerName}, 
				 #{item.itemCode},
				 #{item.itemName}, 
				 #{item.quantity}, 
				 #{item.supplyValue}, 
				 #{item.totalPrice}, 
				 #{item.sellPrice},
				 #{item.taxValue}, 
				 #{item.taxbillNo}, 
				 #{item.releaseDate}, 
				 #{item.insertUserid}, 
				 now(),
				(select b.code 
				 from 	tb_purchaseitem a, tb_section b 
				 where 	a.no = #{item.itemCode}
				 and	a.section_code = b.code
				 and	b.parent_no = 1),
				(select b.classification 
				 from 	tb_purchaseitem a, tb_section b 
				 where 	a.no = #{item.itemCode}
				 and	a.section_code = b.code
				 and	b.parent_no = 1)				
				)
			]]>
		</foreach>
	</insert>
	
	<select id="customerlist" resultType="salescustomervo">
		<![CDATA[
			select no, name, manager_name as ceo, phone from tb_salescustomer;
		]]>
	</select>
	
	<select id="itemlist" resultType="salesvo">
		<![CDATA[
			select			b.item_code as itemCode, 
							b.item_name as itemName, 
							(sum(b.quantity)-ifnull(c.quantity, 0)) as stock
			from			fa.tb_purchaseitem a, fa.tb_purchasemanagement b
			left outer join (select item_code, sum(quantity) as quantity from fa.tb_sales where delete_flag ='N' group by item_code) c
			on				b.item_code = c.item_code
			where			a.no = b.item_code
			group by		b.item_code;
		]]>
	</select>
	
	<select id="getsalesno" parameterType="String" resultType="salesvo">
		<![CDATA[
			select  sales_no as salesNo, 
					date_format(sales_date, '%Y-%m-%d') as salesDate, 
					customer_code as customerCode, 
					customer_name as customerName,
					date_format(release_date, '%Y-%m-%d') as releaseDate, 
					taxbill_no as taxbillNo, 
					item_code as itemCode, 
					emp_manager as empManager, 
					item_name as itemName, 
					total_price as totalPrice, 
					quantity, 
					supply_value as supplyValue, 
					tax_value as taxValue, 
					insert_day as insertDay,
					insert_userid as insertUserid,
					number
			from	tb_sales
			where	sales_no = #{salesNo}
			and		delete_flag = 'N'
			order by number asc
		]]>
	</select>
	
	<update id="delete" parameterType="String">
		<![CDATA[
			update tb_sales set delete_flag='Y' where sales_no = #{salesNo};	
		]]>
	</update>
	
	<delete id="updatedelete" parameterType="String">
		<![CDATA[
			delete from tb_sales where sales_no = #{salesNo }
		]]>
	</delete>
	
	<insert id="updateinsert" parameterType="List">
		<![CDATA[
			insert into
			tb_sales
				(sales_no, 
				 number, 
				 sales_date, 
				 emp_manager, 
				 customer_code, 
				 customer_name,
				 item_code, 
				 item_name, 
				 quantity, 
				 supply_value, 
				 total_price, 
				 sell_price,
				 tax_value, 
				 taxbill_no, 
				 release_date, 
				 insert_userid, 
				 insert_day, 
				 update_userid, 
				 update_day, 
				 section_code, 
				 section_name)
			values
		]]>
		<foreach collection="list" item="item" separator=",">
			<![CDATA[
				(#{item.salesNo}, 
				 #{item.number}, 
				 #{item.salesDate}, 
				 #{item.empManager},
				 #{item.customerCode}, 
				 #{item.customerName}, 
				 #{item.itemCode},
				 #{item.itemName}, 
				 #{item.quantity}, 
				 #{item.supplyValue}, 
				 #{item.totalPrice}, 
				 #{item.sellPrice},
				 #{item.taxValue}, 
				 #{item.taxbillNo}, 
				 #{item.releaseDate}, 
				 #{item.insertUserid},
				 #{item.insertDay}, 
				 #{item.updateUserid}, 
				 now(),
				(select b.code 
				 from 	tb_purchaseitem a, tb_section b 
				 where 	a.no = #{item.itemCode}
				 and	a.section_code = b.code
				 and	b.parent_no = 1),
				(select b.classification 
				 from 	tb_purchaseitem a, tb_section b 
				 where 	a.no = #{item.itemCode}
				 and	a.section_code = b.code
				 and	b.parent_no = 1)				
				)
			]]>
		</foreach>
	</insert>
	<select id="getTaxbill" parameterType="String" resultType="selltaxbill12vo">
		<![CDATA[
			select 	t.taxbill_no as taxbillNo,
					s.sales_no as salesNo, 
			        s.sales_date as salesDate,
			        s.customer_code as customerCode,
			        c.name as customerName,
			        c.ceo as ceo,
			        c.zip_code as zipCode,
			        c.address as address,
			        c.detail_address as detailAddress,
			        c.manager_name as managerName,
			        c.manager_email as managerEmail,
			        sum(s.quantity) as totalQuantity,
			        sum(s.supply_value*s.quantity) as totalSupplyValue, 
					sum(s.tax_value*s.quantity) as totalTaxValue,		
			        t.write_date as writeDate,
			        t.tax_type as taxType,
					t.deposit_no as depositNo,
			        s.release_date as releaseDate,
			        b.deposit_host as depositHost,
			        b.bank_name as bankName,
			        b.bank_code as bankCode,
			        t.voucher_no as voucherNo,
			        t.voucher_use as voucherUse,
			        t.amount_flag as amountFlag,
			        t.account_no as accountNo,
			        t.insert_userid as insertUserid,
			        t.insert_day as insertDay		
			from	fa.tb_sales s, 
					fa.tb_sell_taxbill t, 
			        fa.tb_salescustomer c, 
			        fa.tb_bank_account b
			where	s.sales_no = #{salesNo}
			and		s.taxbill_no = t.taxbill_no
			and		s.customer_code = c.no
			and		t.deposit_no = b.deposit_no; 
		]]>
	</select>
	
	<select id="getVoucherNo" parameterType="String" resultType="String">
		<![CDATA[
			select voucher_no from tb_sell_taxbill where sales_no = #{salesNo }
		]]>
	</select>
	
	<delete id="taxbillremove" parameterType="String">
		<![CDATA[
			update tb_sell_taxbill set delete_flag='Y' where sales_no = #{salesNo }
		]]>
	</delete>
	
	<delete id="deleteTaxbill" parameterType="String">
		<![CDATA[
			delete from tb_sell_taxbill where sales_no = #{salesNo }
		]]>
	</delete>
	
	<insert id="insertTax" parameterType="selltaxbill12vo">
		<![CDATA[
			insert into 
			tb_sell_taxbill 
			values(
			 null, #{taxbillNo },
			 #{salesNo }, #{salesDate}, #{customerCode },
			 #{customerName }, #{ceo },
			 #{zipCode }, #{address }, #{detailAddress },
			 #{managerName }, #{managerEmail },
			 #{totalQuantity }, #{totalSupplyValue }, #{totalTaxValue }, #{writeDate }, #{taxType },
			 #{depositNo }, #{releaseDate }, #{depositHost }, #{bankName }, #{bankCode }, 'N', #{voucherNo },
			 #{voucherUse }, #{amountFlag }, #{accountNo }, #{insertUserid }, #{insertDay }, #{updateUserid }, #{updateDay });
		]]>
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
			select last_insert_id()
			]]>
		</selectKey>
	</insert>
</mapper>