<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="menu50">

	<insert id="insert" parameterType="pdebtvo">
		<![CDATA[
		insert into tb_p_debt
		values (null, #{code }, #{name }, #{majorCode }, 
		#{debtAmount }, #{debtAmount }, 
				#{repayWay }, 'N', 
				#{debtDate }, #{expDate }, #{intRate }, 
				#{intPayWay }, #{mgr }, 
				#{mgrCall }, #{dangerCode }, #{dangerName }, 
				#{bankCode }, #{depositNo }, '2402101', #{voucherNo }, 
				'N', #{insertId }, now(), 0, now())
		]]>
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
			select last_insert_id()
			]]>
		</selectKey>
	</insert>
		
	<select id="selectAll" resultType="pdebtvo" parameterType="map">
		<![CDATA[
			   select 
			   	  a.no as no,
		          a.code as code,
		          a.name as name,
		          a.major_code as majorCode,
		          a.debt_amount as debtAmount,
		          a.repay_bal as repayBal,
		          a.repay_way as repayWay,
		          concat(date_format(a.debt_date,'%Y-%m-%d'), ' - ', date_format(a.exp_date,'%Y-%m-%d')) as debtExpDate,
		          a.int_rate as intRate,
		          a.int_pay_way as intPayWay,
		          a.mgr,
		          a.mgr_call as mgrCall, a.danger_code as dangerCode, a.danger_name as dangerName, 
		          a.bank_code as bankCode,
		          a.deposit_no as depositNo, 
		          date_format(a.insert_date,'%Y-%m-%d %H:%i:%S') as insertDate, 
		          b.name as bankName
		          from tb_p_debt as a,tb_bank as b
		          where a.bank_code = b.code
		                and a.delete_flag = 'N'
		]]>
			<if test="year.length()>0 ">
				<![CDATA[
				and 	date_format(a.debt_date,'%Y') like concat('%',#{year},'%') 
				]]>
			</if>
			<if test="code.length()>0 ">
				<![CDATA[
				and 	a.code like concat('%',#{code},'%') 
				]]>
			</if>
			<if test="pagination.pageIndex >= 0">
				<![CDATA[
			    	order by insertDate desc limit #{pagination.pageIndex }, #{pagination.listSize }
			    ]]>
		    </if>
	</select>
	
	<select id="selectsection" resultType="sectionvo">
		<![CDATA[
			select no,
				classification,
				code,
				last_update as lastUpdate,
				parent_no as parentNo
			    from tb_section
			    where parent_no= 6
		]]>
	</select>
	
	<select id="pdebtTotalcount" parameterType="String" resultType="int">
		<![CDATA[
			select count(*) from tb_p_debt
		]]>
	</select>
	
	<select id="getPdebtInfo" resultType="pdebtvo">
		<![CDATA[
			select 
			no as no, 
			code as code, 
			name as name, 
			major_code as majorCode, 
			debt_amount as debtAmount,
			repay_bal as repayBal, 
			repay_way as repayWay, 
			concat(date_format(debt_date,'%Y-%m-%d'),' - ', date_format(exp_date,'%Y-%m-%d')) as debtExpDate, 
			int_rate as intRate, 
			int_pay_way as intPayWay, 
			int_amount as intAmount, 
			mgr as mgr, mgr_call as mgrCall, danger_code as dangerCode, danger_name as dangerName, 
			bank_code as bankCode, deposit_no as depositNo, account_no as accountNo, 
			voucher_no as voucherNo, delete_flag as deleteFlag, 
			insert_id as insertId, insert_date as insertDate, update_id as updateId,
			update_date as updateDate, 
			date_format(debt_date, '%Y') as financialYear
			from tb_p_debt 
			where code = #{debtcode } 
		]]>
	</select>
	
	<update id="updateDeleteFlag" parameterType="List">
		<![CDATA[
			update tb_p_debt set delete_flag = "Y" where no IN 	
		]]>
			<foreach collection="list" item="item" open="(" close=")" separator=",">
				${item}
			</foreach>
	</update>
	
	<select id="bankList" resultType="bankvo">
		<![CDATA[
			select code, name, store from tb_bank
		]]>
	</select>
	
	<select id="getBankcodeInfo" parameterType="String" resultType="bankvo">
		<![CDATA[
			select code, name, store, mgr, mgr_phone as mgrPhone from tb_bank where code = #{bankcode }
		]]>
	</select>
	
	<select id="getBanknameList" parameterType="String" resultType="bankvo">
		<![CDATA[
			select code, name, store, mgr, mgr_phone as mgrPhone from tb_bank where name = #{bankname }
		]]>
	</select>
	
	<select id="selectAllCount" resultType="int" parameterType="map">
		<![CDATA[
			select count(*)
			    from tb_p_debt
			    where delete_flag= "N"
		]]>
			<if test="year.length() > 0 ">
			<![CDATA[
			and 	date_format(debt_date,'%Y') like concat('%',#{year},'%') 
			]]>
			</if>
			<if test="code.length() > 0 ">
			<![CDATA[
			and 	code like concat('%',#{code},'%') 
			]]>
			</if>
	</select>
	
	<!-- update -->
	<update id="update" parameterType="pdebtvo">
		<![CDATA[
			update tb_p_debt 
			set name = #{name}, major_code = #{majorCode}, debt_amount = #{debtAmount}, 
			repay_way=#{repayWay}, debt_date=#{debtDate}, exp_date=#{expDate}, 
			int_rate=#{intRate}, int_pay_way=#{intPayWay}, mgr=#{mgr}, 
			mgr_call=#{mgrCall}, bank_code=#{bankCode}, deposit_no=#{depositNo}, 
			update_id=#{updateId}, update_date=now() , voucher_no=#{voucherNo}
			where no=#{no}
		]]>
	</update>
	
	<select id="getBankaccountInfo" parameterType="string" resultType="bankaccountvo">
		<![CDATA[
			select	deposit_no as depositNo, deposit_host as depositHost, 
				bank_code as bankCode, bank_name as bankName, balance, deposit_limit as depositLimit, profit
		 from	tb_bank_account
		 where	deposit_no like concat(#{depositNo}, "%")
		 and  delete_flag = "N"
		]]>
	</select>
	
	<!-- delete -->
	<update id="delete" parameterType="list">
		<![CDATA[
			update tb_p_debt set delete_flag='Y' where no in 
		]]>
		<foreach item="item" index="index" collection="list" close=")" open="(" separator=",">
			#{item }
		</foreach>
	</update>
	
	<!-- 전표번호 읽어오기 -->
	<!-- delete -->
	<select parameterType="list" id="selectVoucherNo" resultType="long">
		<![CDATA[
			select voucher_no from tb_p_debt where no in 
		]]>
		<foreach separator="," open="(" close=")" collection="list" index="index" item="item">
			#{item } 
		</foreach>
	</select>
	
	<!-- 전표번호에 따른 사채테이블 데이터 조회 -->
	<!-- select no -->
	<select id="selectByVoucherNo" parameterType="long" resultType="long">
		<![CDATA[
			select voucher_no from tb_p_debt where no=#{_parameter}
		]]>
	</select>
	
	<!-- 상환후 갱신된 정보 select -->
	<select parameterType="long" id="selectone" resultType="pdebtvo">
		<![CDATA[
			select no,
				code,
	   			name,
	    		major_code as majorCode,
	    		debt_amount as debtAmount,
	    		repay_bal as repayBal,
	    		repay_way as repayWay,
	    		concat(date_format(debt_date,'%Y/%m/%d'),'-',
	    		date_format(exp_date,'%Y/%m/%d')) as debtExpDate,
	    		int_rate as intRate,
	    		int_pay_way as intPayWay,
	   			mgr,
	    		mgr_call as mgrCall,
			    bank_code as bankCode,
			    deposit_no as depositNo
			    from tb_p_debt
			    where no=#{_parameter}
		]]>
	</select>
	
	<!--상환 insert -->
	<insert parameterType="repayvo" id="insertrepay">
		<![CDATA[
			insert
			  into tb_repay
			values (null, #{debtNo},#{payPrinc},#{payDate}, 'L', null,#{depositNo},'N',#{insertId},now(),null,null)
		]]>
	<selectKey order="AFTER" resultType="long" keyProperty="no">
		<![CDATA[
			select last_insert_id()
		]]>
	</selectKey>
	</insert>
	
	<!-- 기존사채 차입금액 수정 - 상환 update -->
	<update parameterType="repayvo" id="repayupdate">
	<![CDATA[
		update tb_p_debt set repay_bal = repay_bal - #{payPrinc}	
		where no=#{debtNo}
	]]>
	</update>
	
	<!-- 상환완료 flag update -->
	<update parameterType="long" id="updaterepayflag">
	<![CDATA[
		update tb_p_debt 
		set repay_comple_flag = 'Y'
		where no=#{_parameter}
	]]>
	</update>
	
	<!-- 사채코드 중복확인 -->
	<select parameterType="string" id="getbycode" resultType="ldebtvo">
	<![CDATA[
		select
			code,
			delete_flag as deleteFlag
		from
			tb_p_debt 
   		where code like #{_parameter}
	]]>
	</select>
	
	<!-- 상환에서 BankCode읽기 -->
	<select id="selectBankCode" resultType="string" parameterType="string">
		<![CDATA[
			select bank_code
			from tb_bank_account
			where deposit_no=#{_parameter}
		]]>
	</select>

</mapper>