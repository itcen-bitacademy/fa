<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="menu50">

	<!-- 사채정보입력 -->
	<insert id="insert" parameterType="pdebtvo">
		<![CDATA[
		insert into tb_p_debt
		values (null, #{code }, #{name }, #{majorCode }, 
		#{debtAmount }, #{debtAmount }, 
				#{repayWay }, 'N', 
				#{debtDate }, #{expDate }, #{intRate }, 
				#{intPayWay }, #{mgr }, 
				#{mgrCall }, #{dangerCode }, #{dangerName }, 
				#{bankCode }, #{depositNo }, '2402101', #{voucherNo }, 
				'N', #{insertId }, now(), 0, now())
		]]>
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
			select last_insert_id()
			]]>
		</selectKey>
	</insert>
		
	<select id="selectAll" resultType="pdebtvo" parameterType="map">
		<![CDATA[
			   select 
			   	  a.no as no,
		          a.code as code,
		          a.name as name,
		          a.major_code as majorCode,
		          a.debt_amount as debtAmount,
		          a.repay_bal as repayBal,
		          a.repay_way as repayWay,
		          date_format(a.debt_date,'%Y-%m-%d') as debtDate, 
		          date_format(a.exp_date,'%Y-%m-%d') as expDate,
		          a.int_rate as intRate,
		          a.int_pay_way as intPayWay,
		          a.mgr,
		          a.mgr_call as mgrCall, 
		          a.danger_code as dangerCode, 
		          a.danger_name as dangerName, 
		          a.bank_code as bankCode,
		          a.deposit_no as depositNo, 
		          c.deposit_host as depositHost, 
		          date_format(a.insert_date,'%Y-%m-%d %H:%i:%S') as insertDate, 
		          b.name as bankName
		          from tb_p_debt as a, tb_bank as b, tb_bank_account as c
			          where a.bank_code=b.code
				   		and a.deposit_no = c.deposit_no
				    	and a.delete_flag= 'N'
				    	and a.repay_comple_flag = 'N'
				    	and 	date_format(a.debt_date,'%Y') like concat('%',#{year},'%') 
						and 	a.code like concat('%',#{code},'%') 
		]]>
		<if test="pagination.pageIndex >= 0">
			<![CDATA[
			    order by insertDate desc limit #{pagination.pageIndex }, #{pagination.listSize }
			]]>
		</if>
	</select>
	
	<select id="getPdebtInfo" resultType="pdebtvo">
		<![CDATA[
			select 
			no as no, 
			code as code, 
			name as name, 
			major_code as majorCode, 
			debt_amount as debtAmount,
			repay_bal as repayBal, 
			repay_way as repayWay, 
			concat(date_format(debt_date,'%Y-%m-%d'),' - ', date_format(exp_date,'%Y-%m-%d')) as debtExpDate, 
			int_rate as intRate, 
			int_pay_way as intPayWay, 
			int_amount as intAmount, 
			mgr as mgr, mgr_call as mgrCall, danger_code as dangerCode, danger_name as dangerName, 
			bank_code as bankCode, deposit_no as depositNo, account_no as accountNo, 
			voucher_no as voucherNo, delete_flag as deleteFlag, 
			insert_id as insertId, insert_date as insertDate, update_id as updateId,
			update_date as updateDate, 
			date_format(debt_date, '%Y') as financialYear
			from tb_p_debt 
			where code = #{debtcode } 
		]]>
	</select>
	
	<!-- 은행 팝업창에서 은행코드로 조회 - 은행코드로 데이터 출력 -->
	<select id="getBankcodeInfo" parameterType="String" resultType="bankvo">
		<![CDATA[
			select code, name, store, mgr, mgr_phone as mgrPhone from tb_bank where code = #{bankcode }
		]]>
	</select>
	
	<!-- 은행 팝업창에서 은행명으로 데이터 리스트형식으로 조회 - 은행명으로 데이터 출력 -->
	<select id="getBanknameList" parameterType="String" resultType="bankvo">
		<![CDATA[
			select code, name, store, mgr, mgr_phone as mgrPhone from tb_bank where name like '%#{bankname}%';
		]]>
	</select>
	
	<!-- 전체 갯수 가지고 오기 -->
	<select id="selectAllCount" resultType="int" parameterType="map">
		<![CDATA[
			select count(*)
			    from tb_p_debt as a, tb_bank as b, tb_bank_account as c
				    where a.bank_code=b.code
					    and a.deposit_no = c.deposit_no
					    and	a.delete_flag= 'N'
					    and a.repay_comple_flag = 'N'
					    and 	date_format(a.debt_date,'%Y') like concat('%',#{year},'%') 
						and 	a.code like concat('%',#{code},'%') 
		]]>
	</select>
	
	<!-- 사채관리 페이지에서 수정을 눌렀을 때, 해당 사채정보 수정 -->
	<update id="pdebtupdate" parameterType="pdebtvo">
		<![CDATA[
			update tb_p_debt 
			set name = #{name}, major_code = #{majorCode}, debt_amount = #{debtAmount}, 
			repay_way=#{repayWay}, debt_date=#{debtDate}, exp_date=#{expDate}, 
			int_rate=#{intRate}, int_pay_way=#{intPayWay}, mgr=#{mgr}, 
			mgr_call=#{mgrCall}, bank_code=#{bankCode}, deposit_no=#{depositNo}, 
			update_id=#{updateId}, update_date=now() , voucher_no=#{voucherNo}
			where no=#{no}
		]]>
	</update>
	
	<!-- 사채관리 페이지에서 삭제를 눌렀을 때, 해당 정보 delete_flag='Y'로 업데이트 -->
	<update id="delete" parameterType="list">
		<![CDATA[
			update tb_p_debt set delete_flag='Y' where no in 
		]]>
		<foreach item="item" index="index" collection="list" close=")" open="(" separator=",">
			#{item }
		</foreach>
	</update>
	
	<!-- 공통테이블에 있는 차입금대분류 데이터 호출  -->
	<select id="selectsection" resultType="sectionvo">
		<![CDATA[
			select no,
				classification,
				code,
				last_update as lastUpdate,
				parent_no as parentNo
			    from tb_section
			    where parent_no= 6
		]]>
	</select>
	
	<!-- 상환데이터 입력 -->
	<insert id="insertRepay" parameterType="repayvo" >
		<![CDATA[
			insert into tb_repay 
				values 
					(null, #{debtNo}, #{code}, #{payPrinc}, 
					#{intAmount}, #{payDate}, 'P', 
					#{voucherNo}, 'N', #{insertId}, now(), null, null)
		]]>
		<selectKey order="AFTER" resultType="long" keyProperty="no">
			<![CDATA[
				select last_insert_id()
			]]>
		</selectKey>
	</insert>
	
	<!-- 기존사채 차입금액 수정 - 상환데이터 수정 -->
	<update id="repayUpdate" parameterType="repayvo">
		<![CDATA[
			update tb_p_debt 
				set repay_bal = repay_bal - #{payPrinc}	
					where no=#{debtNo}
		]]>
	</update>
	
	<!-- 상환후 갱신된 정보 select -->
	<select id="selectOne" parameterType="long" resultType="pdebtvo">
		<![CDATA[
			select no,
				code,
	   			name,
	    		major_code as majorCode,
	    		debt_amount as debtAmount,
	    		repay_bal as repayBal,
	    		repay_way as repayWay,
	    		concat(date_format(debt_date,'%Y-%m-%d'),' - ',
	    		date_format(exp_date,'%Y-%m-%d')) as debtExpDate,
	    		int_rate as intRate,
	    		int_pay_way as intPayWay,
	   			mgr,
	    		mgr_call as mgrCall,
			    bank_code as bankCode,
			    deposit_no as depositNo
			    	from tb_p_debt
			    		where no = #{_parameter}
		]]>
	</select>
	
	<!-- 상환완료 flag update -->
	<update id="updateRepayFlag" parameterType="long">
		<![CDATA[
			update tb_p_debt 
				set repay_comple_flag = 'Y' 
					where no = #{_parameter}
		]]>
	</update>
	
	<!-- 전표번호 읽어오기 -->
	<select id="selectVoucherNo" parameterType="list" resultType="long">
		<![CDATA[
			select voucher_no 
				from tb_p_debt 
					where no in 
		]]>
			<foreach separator="," open="(" close=")" collection="list" index="index" item="item">
				#{item } 
			</foreach>
	</select>
	
	<!-- 동일한 사채코드가 존재하는지 비교 -->
	<select parameterType="string" id="getbycode" resultType="pdebtvo">
		<![CDATA[
			select
				code,
				delete_flag as deleteFlag 
					from tb_p_debt 
						where code like #{_parameter}
		]]>
	</select>
	
	<!-- 상환내역 리스트 가지고 오기 -->
	<select id="selectRepaylist" parameterType="long" resultType="repayvo">
		<![CDATA[
			select 	code as code, 
				pay_princ as payPrinc, 
				int_amount as intAmount, 
				date_format(pay_date,'%Y/%m/%d') as payDate 
					from tb_repay 
						where debt_type = 'P' 
							and debt_no = #{_parameter}
		]]>
	</select>
	
	<!-- 해당 코드별 부채확인 -->
	<select id="selectRepayAlllist" parameterType="list" resultType="repayvo">
		<![CDATA[
			select 	code as code,
				pay_princ as payPrinc,
				int_amount as intAmount,
				date_format(pay_date, '%Y-%m-%d') as payDate
				from tb_repay
					where debt_type = 'P'
						and debt_no in 
		]]>
			<foreach separator="," open="(" close=")" collection="list" index="index" item="item">
				#{item } 
			</foreach>
		<![CDATA[
			order by code
		]]>
	</select>
	
	<select id="getBankCodeInfo" parameterType="String" resultType="1customervo">
		<![CDATA[
			select no as no,
				   bank_name as bankName
				   from tb_customer
			 where code like '${_parameter }'
		]]>
	</select>
	
	<select id="getBankNameInfo" parameterType="String" resultType="1customervo">
		<![CDATA[
			select no as no,
				   bank_name as bankName
				   from tb_customer
			 where concat(name, "은행", store) like '%${_parameter }%'
		]]>
	</select>
	
	<!-- ==================================================== -->
	<!-- ==================================================== -->
	<!-- ==================================================== -->
	
	
	
	<!-- 전표번호와 일치하는 사채테이블 데이터 조회 -->
	<select id="selectByVoucherNo" parameterType="long" resultType="long">
		<![CDATA[
			select voucher_no from tb_p_debt where no=#{_parameter}
		]]>
	</select>
	
	
	
	
	
	

</mapper>